---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = [...new Set(posts.flatMap(post => post.data.tags))];
  
  return tags.map(tag => ({
    params: { tag },
    props: { posts: posts.filter(post => post.data.tags.includes(tag)) },
  }));
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// Sort posts by date (newest first)
const sortedPosts = posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
---

<Layout title={`#${tag} - Lorem Code`}>
  <section class="max-w-4xl mx-auto">
    <div class="mb-8">
      <a href="/tags" class="text-primary-600 hover:text-primary-800 flex items-center mb-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
        </svg>
        Regresar a todos los Tags
      </a>
      
      <h1 class="text-4xl font-bold flex items-center">
        <span class="text-primary-500 mr-2">#</span>{tag}
      </h1>
      <p class="text-slate-600 mt-2">
        {posts.length === 1
          ? `Se encontr√≥ 1 post con este tag`
          : `Se encontraron ${posts.length} posts con este tag`}
      </p>
    </div>
    
    <div class="grid gap-8">
      {sortedPosts.map((post) => (
        <PostCard
          title={post.data.title}
          description={post.data.description}
          date={post.data.date}
          tags={post.data.tags}
          url={`/blog/${post.slug}/`}
        />
      ))}
    </div>
  </section>
</Layout>