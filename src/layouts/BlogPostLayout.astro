---
import Layout from './Layout.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;
const { title, date, author, tags, description } = post.data;
const formattedDate = new Date(date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<Layout title={title} description={description}>
  <article class="max-w-4xl mx-auto animate-fade-in">
    <div class="mb-8">
      <h1 class="text-4xl font-bold mb-4">{title}</h1>
      <div class="flex flex-wrap items-center text-sm text-slate-600 gap-y-2">
        <span class="flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          {formattedDate}
        </span>
        <span class="mx-2">•</span>
        <span class="flex items-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
          {author}
        </span>
      </div>

      <div class="flex flex-wrap gap-2 mt-4">
        {tags.map((tag: string) => (
          <a href={`/tags/${tag}`} class="inline-block bg-sky-100 text-sky-800 text-xs px-3 py-1 rounded-full hover:bg-sky-200 dark:bg-sky-900 dark:text-sky-100 transition-colors">
            #{tag}
          </a>
        ))}
      </div>
    </div>

    <div class="prose prose-slate max-w-none">
      <slot />
    </div>
  </article>
</Layout>

<style>
  .prose {
    max-width: 65ch;
    color: #334155;
  }
  
  /* Mejorar legibilidad en modo oscuro para el texto del artículo */
  :global(html.dark) .prose {
    color: #e5e7eb;
  }
  
  .prose h2 {
    font-size: 1.75rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-weight: 600;
    color: #0f172a;
  }
  
  .prose h3 {
    font-size: 1.5rem;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    font-weight: 600;
    color: #0f172a;
  }
  
  .prose p {
    margin-bottom: 1.25rem;
    line-height: 1.6;
  }
  
  .prose a {
    color: #2563eb;
    text-decoration: underline;
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
  }
  
  .prose a:hover {
    color: #1d4ed8;
  }
  
  .prose pre {
    background-color: #1e293b;
    color: #f8fafc;
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  
  .prose code {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 0.875em;
    background-color: #f1f5f9;
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
  }
  
  .prose pre code {
    background-color: transparent;
    padding: 0;
  }
</style>